Partition A Set Into Two Subsets With Minimum Absolute Sum Difference
import java.util.* ;
import java.io.*; 
public class Solution {
	public static int minSubsetSumDifference(int[] arr, int n) {
		// Write your code here.
	//int n= arr.length;
        int sum =0;
        for(int i=0;i<n;i++)
         {
sum=sum+arr[i];
        }
      //  int k=sum;
         boolean[][]dp= new boolean[n][sum+1];
        for(int i=0;i<n;i++){
 dp[i][0]=true;
        }
        
    if(arr[0]<=sum){
     dp[0][arr[0]] = true;
        }
        
        
        for(int ind=1;ind<n;ind++)
        {
            for(int tar=1;tar<=sum;tar++)
            {
             boolean nonpick= dp[ind-1][tar];
        boolean pick=false;
        if(tar>=arr[ind])
     pick= dp[ind-1][tar-arr[ind]];
      dp[ind][tar]=pick||nonpick;
            }
        
        }
        int min=Integer.MAX_VALUE;
        for(int i=0;i<=(sum)/2;i++)
        {
            if(dp[n-1][i]==true)
            {
               min=Math.min(min,Math.abs((sum-i)-i)) ;
            }
        }
return min;
       
    }
}
